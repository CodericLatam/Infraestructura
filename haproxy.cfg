#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
##    log         127.0.0.1 local2
    log stdout format raw local0 info

#    chroot      /var/lib/haproxy
#    pidfile     /var/run/haproxy.pid
    maxconn     4000
##    user        haproxy
##    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#    stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:80
    mode http
    default_backend             app

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app
    balance     roundrobin
    server ruben1 architecture-ruben-1:80 check
    server ruben2 architecture-ruben-2:80 check
    server ruben3 architecture-ruben-3:80 check
    server simeon1 architecture-simeon-1:80 check
    server simeon2 architecture-simeon-2:80 check
    server simeon3 architecture-simeon-3:80 check
    server levi1 architecture-levi-1:80 check
    server levi2 architecture-levi-2:80 check
    server levi3 architecture-levi-3:80 check
